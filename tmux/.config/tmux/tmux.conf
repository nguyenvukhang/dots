# bound to jkl;
NAME_1="MA2002"; DIR_1="~/repos/uni/MA2002/modules/MA2002/tutorials"
NAME_2="uni"    ; DIR_2="~/repos/uni"
NAME_3="uni"    ; DIR_3="~/repos/uni"
NAME_4="uni"    ; DIR_4="~/repos/uni"

# fixes colors for:
# Terminals: kitty, iTerm2
# Editors: neovim, vim
# Shells: zsh
# reference: https://github.com/nguyenvukhang/dots
set-option -g default-terminal "screen-256color"
set-option -ga terminal-overrides ',*-256color*:Tc'

# ====
# SETS
# ====

# enables mouse support
set -g mouse on

# makes escape faster on vim
set -sg escape-time 0

# set windows to count from 1
set -g base-index 1

# set logging path to outside of home directory
set -g @logging-path "~/.config/tmux"

# makes all window indices "gapless"
set -g renumber-windows on

# ======
# REMAPS
# ======

# set prefix key to ctrl-space
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# no-ops
unbind l

# disable left and middle clicks
unbind -n MouseDown1Pane
unbind -n MouseDown1Status
unbind -n MouseDown2Pane
# right-click to paste from tmux clipboard
bind -n MouseDown3Pane select-pane -t = \; if -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" "send -M" "paste -p"
# populates mac system clipboard with tmux clipboard contents
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# reload config
bind r source-file ~/.config/tmux/tmux.conf \; display-message " config reloaded!"

# make window rename start with nothing
bind , command-prompt "rename-window '%%'"

# create new window
bind -n M-n neww
bind -n M-, command-prompt "rename-window '%%'"

# window splitting
bind -n M-d splitw -c "#{pane_current_path}" -h
bind -n M-D splitw -c "#{pane_current_path}" -v
bind '%'    splitw -c "#{pane_current_path}" -h
bind '"'    splitw -c "#{pane_current_path}" -v

# vim-like pane switching (without auto-cycling)
bind -n M-h if -F '#{pane_at_left}'   '' 'select-pane -L'
bind -n M-j if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind -n M-k if -F '#{pane_at_top}'    '' 'select-pane -U'
bind -n M-l if -F '#{pane_at_right}'  '' 'select-pane -R'

# vim-like pane switching (with auto-cycling)
# bind -N "Jump to left pane"  -n M-h selectp -L
# bind -N "Jump to right pane" -n M-j selectp -D
# bind -N "Jump to above pane" -n M-k selectp -U
# bind -N "Jump to below pane" -n M-l selectp -R

# vim-like window switching (with auto-cycling)
bind -n M-H prev
bind -n M-L next

# rotate windows
bind -n M-O rotatew
bind -n M-o rotatew -D

# 
bind -n M-s choose-tree -Zs

# ==========
# NAVIGATION
# ==========

# productivity
bind -N "Open todo list" t neww -n "todo" "nvim ~/repos/uni/todo.md"
bind j  neww -n $NAME_1 -c $DIR_1
bind k  neww -n $NAME_2 -c $DIR_2
bind l  neww -n $NAME_3 -c $DIR_3
bind \; neww -n $NAME_4 -c $DIR_4
bind q  neww -n "questions" -c "~/repos/uni" "nvim questions.md"

# small bottom window (for testing short code)
bind b splitw -c "#{pane_current_path}" -v -l 8

# new window at same directory
bind c neww -c "#{pane_current_path}"

# ==========
# AESTHETICS
# ==========

status_fg="#b8bb26"
status_bg="#282828"
status_inactive="#7c6f64"
message_fg="#fabd2f"
pane_border=$status_fg

# borders
set -g pane-border-style "fg=$pane_border"
set -g pane-active-border-style "fg=$pane_border"

# statusbar
set -g status on
set -g status-position bottom
set -g status-style "fg=$status_fg"
set -g status-interval 15
set -g status-justify left
set -g status-keys vi

set -g status-left "[#S]"
set -g status-left-style "fg=green"
set -g status-interval 15
set -g status-left-length 10

# set -g status-right "#{?window_bigger,[#{window_offset_x}#,#{window_offset_y}] ,} #[fg=magenta]%d %b  #[fg=yellow]%H:%M  "
set -g status-right "#[fg=magenta]%d %b  #[fg=yellow]%H:%M "
if-shell "[ -f ~/.local/bin/birthday ]" \
  "set -g status-right '#(~/.local/bin/birthday)  #[fg=magenta]%d %b  #[fg=yellow]%H:%M '"

set -g status-right-length 40

# solid background for current window
# set -g window-status-current-style "bg=$status_fg fg=$status_bg"

# use dark grey for inactive window
set -g window-status-current-style "fg=$status_fg"
set -g window-status-style "fg=$status_inactive"

set -g window-status-current-format " #I:#W"
set -g window-status-format " #I:#W"
set -g window-status-separator " "

# messages
set-option -g message-command-style fg=white,bg=$status_bg
set-option -g message-style fg=$message_fg,bg=$status_bg
